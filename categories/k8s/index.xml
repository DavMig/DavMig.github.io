<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>K8s on Zaft Memory Core</title><link>https://davmig.github.io/categories/k8s/</link><description>Recent content in K8s on Zaft Memory Core</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sun, 18 May 2025 19:00:00 +0000</lastBuildDate><atom:link href="https://davmig.github.io/categories/k8s/index.xml" rel="self" type="application/rss+xml"/><item><title>Installation of Kubernetes on Debian Part 3 - Install Flux CD</title><link>https://davmig.github.io/posts/k8s-part3-fluxcd-installation/</link><pubDate>Sun, 18 May 2025 19:00:00 +0000</pubDate><guid>https://davmig.github.io/posts/k8s-part3-fluxcd-installation/</guid><description>&lt;h2 id="part-3---adding-flux-cd">Part 3 - Adding flux CD&lt;/h2>
&lt;p>In this part, we will add flux CD to our cluster, so we can maintain it in sync with our git repository. The goal here is to actually leverage the gitops principles , where you define your desired stat in a git repository and flux will make sure your cluster is in sync with it.&lt;/p>
&lt;p>If you followed our previous part, you should have a working kubernetes cluster with a control plane and a node, which is sufficient to start using flux CD.&lt;/p></description></item><item><title>Installation of Kubernetes on Debian Part 2 - Adding a Node</title><link>https://davmig.github.io/posts/k8s-part2-adding-node/</link><pubDate>Sat, 17 May 2025 09:00:00 +0000</pubDate><guid>https://davmig.github.io/posts/k8s-part2-adding-node/</guid><description>&lt;h2 id="rationale">Rationale&lt;/h2>
&lt;p>In our previous &lt;a href="posts/2025-05-16.k8s.install/">post&lt;/a> we installed Kubernetes control plane on a single node. Now we want to add a second node to our cluster to run our workloads. We will follow official &lt;a href="https://kubernetes.io/docs/tasks/administer-cluster/kubeadm/adding-linux-nodes/">documentation&lt;/a> to add a node to our cluster.&lt;/p>
&lt;h2 id="pre-requisites">Pre-requisites&lt;/h2>
&lt;p>Before we join a node to the cluster, we need to have a node with the following :&lt;/p>
&lt;ul>
&lt;li>should have tooling installed (kubeadm, kubelet)&lt;/li>
&lt;li>should have a container runtime installed (containerd in our case)&lt;/li>
&lt;li>we need super-user access to the node.&lt;/li>
&lt;/ul>
&lt;h3 id="setup-the-node-on-vanilla-debian">Setup the node on vanilla Debian&lt;/h3>
&lt;p>for the ease of setup, I will duplicate a template VM I&amp;rsquo;ve created before, I will just rename it to &lt;code>wnode-01&lt;/code> for worker-node-01 and change the hostname.&lt;/p></description></item><item><title>Installation of Kubernetes on Debian Part 1 - Control Plane</title><link>https://davmig.github.io/posts/k8s-part1-control-plane-installation-on-debian/</link><pubDate>Fri, 16 May 2025 09:00:00 +0000</pubDate><guid>https://davmig.github.io/posts/k8s-part1-control-plane-installation-on-debian/</guid><description>&lt;h2 id="rationale">Rationale&lt;/h2>
&lt;p>At work, we are currently deploying GKEs for our applications. Today, containerization is no longer something I see as optional but a necessity due to the value it provides—though it&amp;rsquo;s often necessary to work on team organization first to get the most out of it, but that&amp;rsquo;s a topic for another post.&lt;/p>
&lt;p>However, mastering such a system is not within everyone&amp;rsquo;s reach. Implementing technical governance around this system is no easy task, and those who implement it generally agree—it&amp;rsquo;s complex and requires real expertise to design and deploy the various stacks with technology choices suited to the context.&lt;/p></description></item></channel></rss>