<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Notes on Zaft Memory Core</title><link>https://davmig.github.io/categories/notes/</link><description>Recent content in Notes on Zaft Memory Core</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 06 Jun 2020 09:00:00 +0000</lastBuildDate><atom:link href="https://davmig.github.io/categories/notes/index.xml" rel="self" type="application/rss+xml"/><item><title>Changes to String in java (from 1.7.0_06)</title><link>https://davmig.github.io/posts/2020-06-06-changes-in-java-string/</link><pubDate>Sat, 06 Jun 2020 09:00:00 +0000</pubDate><guid>https://davmig.github.io/posts/2020-06-06-changes-in-java-string/</guid><description>&lt;p>Before 1.7.0_06, &lt;code>String&lt;/code> has 4 non static field:&lt;/p>
&lt;ul>
&lt;li>char[] value&lt;/li>
&lt;li>int[] offset&lt;/li>
&lt;li>int count&lt;/li>
&lt;li>int hash&lt;/li>
&lt;/ul>
&lt;p>&lt;code>Subing.substring&lt;/code> create a String by sharing the original String&amp;rsquo;s internal &lt;code>char[] value&lt;/code> and setting offset. This saves memory and makes &lt;code>String.substring&lt;/code> run in a constant time($O(1)$).
Meanwhile, this feature may cause &lt;strong>memory leak&lt;/strong>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>&lt;a href="http://hg.openjdk.java.net/jdk6/jdk6/jdk/file/8deef18bb749/src/share/classes/java/lang/String.java">http://hg.openjdk.java.net/jdk6/jdk6/jdk/file/8deef18bb749/src/share/classes/java/lang/String.java&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Java" data-lang="Java">&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1&lt;/span>&lt;span>&lt;span style="color:#8be9fd;font-style:italic">public&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">final&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">class&lt;/span> &lt;span style="color:#50fa7b">String&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2&lt;/span>&lt;span> &lt;span style="color:#8be9fd;font-style:italic">implements&lt;/span> java.&lt;span style="color:#50fa7b">io&lt;/span>.&lt;span style="color:#50fa7b">Serializable&lt;/span>, Comparable&lt;span style="color:#ff79c6">&amp;lt;&lt;/span>String&lt;span style="color:#ff79c6">&amp;gt;&lt;/span>, CharSequence
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3&lt;/span>&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4&lt;/span>&lt;span> &lt;span style="color:#6272a4">/** The value is used for character storage. */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5&lt;/span>&lt;span> &lt;span style="color:#8be9fd;font-style:italic">private&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">final&lt;/span> &lt;span style="color:#8be9fd">char&lt;/span> value&lt;span style="color:#ff79c6">[]&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7&lt;/span>&lt;span> &lt;span style="color:#6272a4">/** The offset is the first index of the storage that is used. */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8&lt;/span>&lt;span> &lt;span style="color:#8be9fd;font-style:italic">private&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">final&lt;/span> &lt;span style="color:#8be9fd">int&lt;/span> offset;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10&lt;/span>&lt;span> &lt;span style="color:#6272a4">/** The count is the number of characters in the String. */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11&lt;/span>&lt;span> &lt;span style="color:#8be9fd;font-style:italic">private&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">final&lt;/span> &lt;span style="color:#8be9fd">int&lt;/span> count;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13&lt;/span>&lt;span> &lt;span style="color:#6272a4">/** Cache the hash code for the string */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14&lt;/span>&lt;span> &lt;span style="color:#8be9fd;font-style:italic">private&lt;/span> &lt;span style="color:#8be9fd">int&lt;/span> hash; &lt;span style="color:#6272a4">// Default to 0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16&lt;/span>&lt;span> &lt;span style="color:#6272a4">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18&lt;/span>&lt;span> &lt;span style="color:#6272a4">// Package private constructor which shares value array for speed.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19&lt;/span>&lt;span> String(&lt;span style="color:#8be9fd">int&lt;/span> offset, &lt;span style="color:#8be9fd">int&lt;/span> count, &lt;span style="color:#8be9fd">char&lt;/span> value&lt;span style="color:#ff79c6">[]&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20&lt;/span>&lt;span> &lt;span style="color:#ff79c6">this&lt;/span>.&lt;span style="color:#50fa7b">value&lt;/span> &lt;span style="color:#ff79c6">=&lt;/span> value;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21&lt;/span>&lt;span> &lt;span style="color:#ff79c6">this&lt;/span>.&lt;span style="color:#50fa7b">offset&lt;/span> &lt;span style="color:#ff79c6">=&lt;/span> offset;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22&lt;/span>&lt;span> &lt;span style="color:#ff79c6">this&lt;/span>.&lt;span style="color:#50fa7b">count&lt;/span> &lt;span style="color:#ff79c6">=&lt;/span> count;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23&lt;/span>&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25&lt;/span>&lt;span> &lt;span style="color:#6272a4">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27&lt;/span>&lt;span> &lt;span style="color:#6272a4">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28&lt;/span>&lt;span>&lt;span style="color:#6272a4"> * Returns a new string that is a substring of this string. The
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29&lt;/span>&lt;span>&lt;span style="color:#6272a4"> * substring begins at the specified &amp;lt;code&amp;gt;beginIndex&amp;lt;/code&amp;gt; and
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30&lt;/span>&lt;span>&lt;span style="color:#6272a4"> * extends to the character at index &amp;lt;code&amp;gt;endIndex - 1&amp;lt;/code&amp;gt;.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31&lt;/span>&lt;span>&lt;span style="color:#6272a4"> * Thus the length of the substring is &amp;lt;code&amp;gt;endIndex-beginIndex&amp;lt;/code&amp;gt;.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32&lt;/span>&lt;span>&lt;span style="color:#6272a4"> * &amp;lt;p&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33&lt;/span>&lt;span>&lt;span style="color:#6272a4"> * Examples:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">34&lt;/span>&lt;span>&lt;span style="color:#6272a4"> * &amp;lt;blockquote&amp;gt;&amp;lt;pre&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">35&lt;/span>&lt;span>&lt;span style="color:#6272a4"> * &amp;#34;hamburger&amp;#34;.substring(4, 8) returns &amp;#34;urge&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">36&lt;/span>&lt;span>&lt;span style="color:#6272a4"> * &amp;#34;smiles&amp;#34;.substring(1, 5) returns &amp;#34;mile&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">37&lt;/span>&lt;span>&lt;span style="color:#6272a4"> * &amp;lt;/pre&amp;gt;&amp;lt;/blockquote&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">38&lt;/span>&lt;span>&lt;span style="color:#6272a4"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">39&lt;/span>&lt;span>&lt;span style="color:#6272a4"> * @param beginIndex the beginning index, inclusive.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">40&lt;/span>&lt;span>&lt;span style="color:#6272a4"> * @param endIndex the ending index, exclusive.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">41&lt;/span>&lt;span>&lt;span style="color:#6272a4"> * @return the specified substring.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">42&lt;/span>&lt;span>&lt;span style="color:#6272a4"> * @exception IndexOutOfBoundsException if the
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">43&lt;/span>&lt;span>&lt;span style="color:#6272a4"> * &amp;lt;code&amp;gt;beginIndex&amp;lt;/code&amp;gt; is negative, or
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">44&lt;/span>&lt;span>&lt;span style="color:#6272a4"> * &amp;lt;code&amp;gt;endIndex&amp;lt;/code&amp;gt; is larger than the length of
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">45&lt;/span>&lt;span>&lt;span style="color:#6272a4"> * this &amp;lt;code&amp;gt;String&amp;lt;/code&amp;gt; object, or
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">46&lt;/span>&lt;span>&lt;span style="color:#6272a4"> * &amp;lt;code&amp;gt;beginIndex&amp;lt;/code&amp;gt; is larger than
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">47&lt;/span>&lt;span>&lt;span style="color:#6272a4"> * &amp;lt;code&amp;gt;endIndex&amp;lt;/code&amp;gt;.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">48&lt;/span>&lt;span>&lt;span style="color:#6272a4"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">49&lt;/span>&lt;span> &lt;span style="color:#8be9fd;font-style:italic">public&lt;/span> String &lt;span style="color:#50fa7b">substring&lt;/span>(&lt;span style="color:#8be9fd">int&lt;/span> beginIndex, &lt;span style="color:#8be9fd">int&lt;/span> endIndex) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">50&lt;/span>&lt;span> &lt;span style="color:#ff79c6">if&lt;/span> (beginIndex &lt;span style="color:#ff79c6">&amp;lt;&lt;/span> 0) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">51&lt;/span>&lt;span> &lt;span style="color:#ff79c6">throw&lt;/span> &lt;span style="color:#ff79c6">new&lt;/span> StringIndexOutOfBoundsException(beginIndex);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">52&lt;/span>&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">53&lt;/span>&lt;span> &lt;span style="color:#ff79c6">if&lt;/span> (endIndex &lt;span style="color:#ff79c6">&amp;gt;&lt;/span> count) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">54&lt;/span>&lt;span> &lt;span style="color:#ff79c6">throw&lt;/span> &lt;span style="color:#ff79c6">new&lt;/span> StringIndexOutOfBoundsException(endIndex);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">55&lt;/span>&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">56&lt;/span>&lt;span> &lt;span style="color:#ff79c6">if&lt;/span> (beginIndex &lt;span style="color:#ff79c6">&amp;gt;&lt;/span> endIndex) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">57&lt;/span>&lt;span> &lt;span style="color:#ff79c6">throw&lt;/span> &lt;span style="color:#ff79c6">new&lt;/span> StringIndexOutOfBoundsException(endIndex &lt;span style="color:#ff79c6">-&lt;/span> beginIndex);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">58&lt;/span>&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">59&lt;/span>&lt;span> &lt;span style="color:#ff79c6">return&lt;/span> ((beginIndex &lt;span style="color:#ff79c6">==&lt;/span> 0) &lt;span style="color:#ff79c6">&amp;amp;&amp;amp;&lt;/span> (endIndex &lt;span style="color:#ff79c6">==&lt;/span> count)) &lt;span style="color:#ff79c6">?&lt;/span> &lt;span style="color:#ff79c6">this&lt;/span> :
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">60&lt;/span>&lt;span> &lt;span style="color:#ff79c6">new&lt;/span> String(offset &lt;span style="color:#ff79c6">+&lt;/span> beginIndex, endIndex &lt;span style="color:#ff79c6">-&lt;/span> beginIndex, value);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">61&lt;/span>&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">62&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">63&lt;/span>&lt;span> &lt;span style="color:#6272a4">// ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">64&lt;/span>&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Since Java 1.7.0_06, &lt;code>offset&lt;/code> and &lt;code>count&lt;/code> fields were removed. &lt;code>String.substring&lt;/code> makes new copies of &lt;code>value&lt;/code>, which means we can forget about the memory leak but the runtime becomes $O(N)$ at the same time.&lt;/p></description></item><item><title>Racket notes</title><link>https://davmig.github.io/posts/2020-02-29-racket/</link><pubDate>Sat, 29 Feb 2020 09:00:00 +0000</pubDate><guid>https://davmig.github.io/posts/2020-02-29-racket/</guid><description>&lt;h2 id="basic">Basic&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-racket" data-lang="racket">&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1&lt;/span>&lt;span>&lt;span style="color:#ff79c6">#lang &lt;/span>racket
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2&lt;/span>&lt;span>(&lt;span style="color:#ff79c6">provide&lt;/span> (&lt;span style="color:#ff79c6">all-defined-out&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4&lt;/span>&lt;span>&lt;span style="color:#6272a4">;this is a comment&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6&lt;/span>&lt;span>(&lt;span style="color:#ff79c6">define&lt;/span> s &lt;span style="color:#f1fa8c">&amp;#34;hello&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8&lt;/span>&lt;span>(&lt;span style="color:#ff79c6">define&lt;/span> x &lt;span style="color:#bd93f9">3&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9&lt;/span>&lt;span>(&lt;span style="color:#ff79c6">define&lt;/span> y (&lt;span style="color:#8be9fd;font-style:italic">+&lt;/span> x &lt;span style="color:#bd93f9">2&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11&lt;/span>&lt;span>(&lt;span style="color:#ff79c6">define&lt;/span> cube1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12&lt;/span>&lt;span> (&lt;span style="color:#ff79c6">lambda&lt;/span> (x)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13&lt;/span>&lt;span> (&lt;span style="color:#8be9fd;font-style:italic">*&lt;/span> x (&lt;span style="color:#8be9fd;font-style:italic">*&lt;/span> x x))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15&lt;/span>&lt;span>(&lt;span style="color:#ff79c6">define&lt;/span> cube2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16&lt;/span>&lt;span> (&lt;span style="color:#ff79c6">lambda&lt;/span> (x)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17&lt;/span>&lt;span> (&lt;span style="color:#8be9fd;font-style:italic">*&lt;/span> x x x)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19&lt;/span>&lt;span>(&lt;span style="color:#ff79c6">define&lt;/span> (cube3 x)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20&lt;/span>&lt;span> (&lt;span style="color:#8be9fd;font-style:italic">*&lt;/span> x x x))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22&lt;/span>&lt;span>(&lt;span style="color:#ff79c6">define&lt;/span> (pow1 x y)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23&lt;/span>&lt;span> (&lt;span style="color:#ff79c6">if&lt;/span> (=y &lt;span style="color:#bd93f9">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24&lt;/span>&lt;span> &lt;span style="color:#bd93f9">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25&lt;/span>&lt;span> (&lt;span style="color:#8be9fd;font-style:italic">*&lt;/span> x (pow1 x (&lt;span style="color:#8be9fd;font-style:italic">-&lt;/span> y &lt;span style="color:#bd93f9">1&lt;/span>)))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26&lt;/span>&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27&lt;/span>&lt;span>&lt;span style="color:#6272a4">; currying&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28&lt;/span>&lt;span>(&lt;span style="color:#ff79c6">define&lt;/span> pow2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29&lt;/span>&lt;span> (&lt;span style="color:#ff79c6">lambda&lt;/span> (x)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30&lt;/span>&lt;span> (&lt;span style="color:#ff79c6">lambda&lt;/span> (y)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31&lt;/span>&lt;span> (pow1 x y))))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="list">List&lt;/h3>
&lt;ul>
&lt;li>Empty list: &lt;code>null&lt;/code>
&lt;ul>
&lt;li>&lt;code>()&lt;/code> doesn&amp;quot;t work for &lt;code>null&lt;/code> but &lt;code>'()&lt;/code> does&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>build a list: &lt;code>(list e1 ... en)&lt;/code>&lt;/li>
&lt;li>Constructor: &lt;code>cons&lt;/code>&lt;/li>
&lt;li>Access head of list: &lt;code>car&lt;/code>&lt;/li>
&lt;li>Access tail of list: &lt;code>cdr&lt;/code>&lt;/li>
&lt;li>Check for empty: &lt;code>null?&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="syntax">Syntax&lt;/h3>
&lt;p>A term is either:&lt;/p></description></item><item><title>Standard ML notes</title><link>https://davmig.github.io/posts/2019-12-30-standardml-notes/</link><pubDate>Mon, 30 Dec 2019 09:00:00 +0000</pubDate><guid>https://davmig.github.io/posts/2019-12-30-standardml-notes/</guid><description>&lt;h2 id="basics">Basics&lt;/h2>
&lt;h3 id="comments">Comments&lt;/h3>
&lt;pre tabindex="0">&lt;code class="language-ML" data-lang="ML">(* SML comment *)
&lt;/code>&lt;/pre>&lt;h3 id="variable-bindings-and-expressions">Variable bindings and Expressions&lt;/h3>
&lt;pre tabindex="0">&lt;code class="language-ML" data-lang="ML">val x = 34;
(* static environment: x : int *)
(* dynamic environment: x --&amp;gt; 34 *)
val y = x + 1;

(* Use tilde character instead of minus to reprsent negation *)
val z = ~1;

(* Integer Division *)
val w = y div x
&lt;/code>&lt;/pre>&lt;p>Strings:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-ML" data-lang="ML">(* `\n`のようなエスケープシーケンスが利用できる *)
val x = &amp;#34;hello\n&amp;#34;; 
(* 文字列の連結には&amp;#39;^&amp;#39;を使う *)
val y = &amp;#34;hello &amp;#34; ^ &amp;#34;world&amp;#34;;
&lt;/code>&lt;/pre>&lt;p>An ML program is a sequence of bindings. Each binding gets &lt;strong>type-checked&lt;/strong> and then &lt;strong>evaluated&lt;/strong>.
What type a binding has depends on a static environment. How a binding is evaluated depends on a dynamic environment.
Sometimes we use just &lt;code>environment&lt;/code> to mean dynamic environment and use &lt;code>context&lt;/code> as a synonym for static environment.&lt;/p></description></item><item><title>uipath ノート（三）- uipath orchestrator</title><link>https://davmig.github.io/posts/2019-11-23-uipath-orchestrator/</link><pubDate>Sat, 23 Nov 2019 09:00:00 +0000</pubDate><guid>https://davmig.github.io/posts/2019-11-23-uipath-orchestrator/</guid><description>&lt;h2 id="利用手順">利用手順&lt;/h2>
&lt;p>Official doc: &lt;a href="https://docs.uipath.com/robot/docs/from-orchestrator-and-the-orchestrator-settings-window">https://docs.uipath.com/robot/docs/from-orchestrator-and-the-orchestrator-settings-window&lt;/a>&lt;/p>
&lt;h3 id="マシンを追加">マシンを追加&lt;/h3>
&lt;p>マシン側でマシン名とユーザ名を確認&lt;/p>
&lt;pre tabindex="0">&lt;code>C:\Users\user&amp;gt;hostname
DESKTOP-ABCDE5F

C:\Users\user&amp;gt;whoami
desktop-abcde5f\user

C:\Users\user&amp;gt;
&lt;/code>&lt;/pre>&lt;p>追加完了後、マシンキーを取得する。&lt;/p>
&lt;h3 id="ロボットを登録">ロボットを登録&lt;/h3>
&lt;ul>
&lt;li>Type: studio (開発用？)&lt;/li>
&lt;li>Domain/Username: 上記のユーザ名&lt;/li>
&lt;/ul>
&lt;h3 id="ローカルのorchestrator設定">ローカルのorchestrator設定&lt;/h3>
&lt;p>Uipath Robotを開き⇒orchestratorの設定で、上記のマシンキーを入力する。
orchestrator URLに &lt;code>https://platform.uipath.com/&lt;/code> を入力する.
&lt;code>Invalid machine key&lt;/code>というエラーが出たら、下記のようなURLを試す：&lt;/p>
&lt;pre tabindex="0">&lt;code>https://platform.uipath.com/&amp;lt;account name&amp;gt;/&amp;lt;service name&amp;gt;
&lt;/code>&lt;/pre>&lt;p>参照：&lt;a href="https://forum.uipath.com/t/uipath-orchestrator-error-invalid-machine-key/153438/16">Uipath orchestrator error : invalid machine key&lt;/a>&lt;/p>
&lt;h3 id="ロボットグループenvironment作成">ロボットグループ(Environment)作成&lt;/h3>
&lt;h3 id="プロジェクトをパブリッシュpublish">プロジェクトをパブリッシュ(Publish)&lt;/h3>
&lt;h3 id="プロセスを追加">プロセスを追加&lt;/h3>
&lt;p>Automations　⇒　Processes&lt;/p>
&lt;h3 id="ジョブjobsの実行">ジョブ(Jobs)の実行&lt;/h3>
&lt;p>Monitoring　⇒　Jobs&lt;/p>
&lt;h2 id="その他">その他&lt;/h2>
&lt;h3 id="再パブリッシュするとprocessが最新バージョンを使うため変更作業が必要">再パブリッシュすると、Processが最新バージョンを使うため、変更作業が必要&lt;/h3>
&lt;p>Processes　⇒　More Options　⇒　View Process　⇒　最新のバージョンに切り替える&lt;/p>
&lt;h3 id="ジョブの停止">ジョブの停止&lt;/h3>
&lt;ul>
&lt;li>停止(Stop)：必ずワークフロー内で「停止すべきか確認(Should Stop)」アクティビティを使用する&lt;/li>
&lt;li>強制終了(Kill)：処理中の内容に関わらず、ジョブを停止する&lt;/li>
&lt;/ul>
&lt;h3 id="アクティブなジョブは削除できない">アクティブなジョブは削除できない&lt;/h3>
&lt;h3 id="パラメーター変更の優先順位">パラメーター変更の優先順位&lt;/h3>
&lt;p>ジョブ (Jobs) -&amp;gt; プロセス (Processes) -&amp;gt; パッケージ(UiPath Studio)&lt;/p></description></item><item><title>uipath ノート（二）- Best Practice</title><link>https://davmig.github.io/posts/2019-11-18-uipath-best-practice/</link><pubDate>Mon, 18 Nov 2019 09:00:00 +0000</pubDate><guid>https://davmig.github.io/posts/2019-11-18-uipath-best-practice/</guid><description>&lt;h2 id="時間をかけて各ワークフローに適したレイアウトを選択しましょう">時間をかけて各ワークフローに適したレイアウトを選択しましょう。&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>メイン: フローチャートまたはステートマシン&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ビジネスロジック: フローチャート&lt;/p>
&lt;/li>
&lt;li>
&lt;p>UI インタラクション: シーケンス&lt;/p>
&lt;/li>
&lt;li>
&lt;p>フローチャートを使用することで、入れ子状の IF を回避&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="プロセスを小さなワークフローに分割しましょう">プロセスを小さなワークフローに分割しましょう。&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>分割したものを個別に開発、テスト&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ワークフローの再利用&lt;/p>
&lt;/li>
&lt;li>
&lt;p>分割ファイルで作業することによる、より効率的な共同作業&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="必ず例外を処理しましょう">必ず例外を処理しましょう。&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>例外が発生しやすいワークフローを [Try Catch (トライキャッチ)] ブロックに配置&lt;/p>
&lt;/li>
&lt;li>
&lt;p>外部から呼び出されたワークフローでも同様&lt;/p>
&lt;/li>
&lt;li>
&lt;p>リカバリシーケンスの設定&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="ワークフローを読みやすいものにしましょう">ワークフローを読みやすいものにしましょう。&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>すべてのコンポーネントにわかりやすい名前を選択&lt;/p>
&lt;/li>
&lt;li>
&lt;p>注記やコメントの使用&lt;/p>
&lt;/li>
&lt;li>
&lt;p>リアルタイムの実行状況のログ取得&lt;/p>
&lt;/li>
&lt;li>
&lt;p>環境設定を Config ファイルに格納&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="不要になったアプリケーションを終了させることで常にクリーンな状態を維持しましょう">不要になったアプリケーションを終了させることで、常にクリーンな状態を維持しましょう。&lt;/h2></description></item><item><title>JavaScript URI エンコーディング</title><link>https://davmig.github.io/posts/2019-11-10-encodeuricomponent/</link><pubDate>Sun, 10 Nov 2019 09:00:00 +0000</pubDate><guid>https://davmig.github.io/posts/2019-11-10-encodeuricomponent/</guid><description>&lt;h2 id="まとめ">まとめ&lt;/h2>
&lt;p>&lt;code>encodeURI()&lt;/code>と&lt;code>encodeURIComponent()&lt;/code>はRFC 2396準拠である。
&lt;code>encodeURI()&lt;/code> は完全な URI を表すのに必要な文字 (Reserved Characters) はエンコードしません。
また、予約されていないが &amp;ldquo;そのまま&amp;rdquo; URI に使用できる(Unreserved Marks) 文字をエンコードしません。
&lt;code>encodeURIComponent()&lt;/code> は &amp;ldquo;Unreserved Marks&amp;rdquo; 文字をエンコードしません。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-JavaScript" data-lang="JavaScript">&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1&lt;/span>&lt;span>&lt;span style="color:#8be9fd;font-style:italic">var&lt;/span> set1 &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#34;;,/?:@&amp;amp;=+$#&amp;#34;&lt;/span>; &lt;span style="color:#6272a4">// Reserved Characters
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2&lt;/span>&lt;span>&lt;span style="color:#6272a4">&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">var&lt;/span> set2 &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#34;-_.!~*&amp;#39;()&amp;#34;&lt;/span>; &lt;span style="color:#6272a4">// Unreserved Marks
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3&lt;/span>&lt;span>&lt;span style="color:#6272a4">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4&lt;/span>&lt;span>console.log(&lt;span style="color:#8be9fd;font-style:italic">encodeURI&lt;/span>(set1)); &lt;span style="color:#6272a4">// ;,/?:@&amp;amp;=+$
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5&lt;/span>&lt;span>&lt;span style="color:#6272a4">&lt;/span>console.log(&lt;span style="color:#8be9fd;font-style:italic">encodeURI&lt;/span>(set2)); &lt;span style="color:#6272a4">// -_.!~*&amp;#39;()
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6&lt;/span>&lt;span>&lt;span style="color:#6272a4">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7&lt;/span>&lt;span>console.log(&lt;span style="color:#8be9fd;font-style:italic">encodeURIComponent&lt;/span>(set1)); &lt;span style="color:#6272a4">// %3B%2C%2F%3F%3A%40%26%3D%2B%24
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8&lt;/span>&lt;span>&lt;span style="color:#6272a4">&lt;/span>console.log(&lt;span style="color:#8be9fd;font-style:italic">encodeURIComponent&lt;/span>(set2)); &lt;span style="color:#6272a4">// -_.!~*&amp;#39;()
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="rfc2396-appendix-a">rfc2396 appendix-A&lt;/h2>
&lt;p>&lt;a href="https://tools.ietf.org/html/rfc2396#appendix-A">https://tools.ietf.org/html/rfc2396#appendix-A&lt;/a>&lt;/p>
&lt;pre tabindex="0">&lt;code>URI-reference = [ absoluteURI | relativeURI ] [ &amp;#34;#&amp;#34; fragment ]
 absoluteURI = scheme &amp;#34;:&amp;#34; ( hier_part | opaque_part )
 relativeURI = ( net_path | abs_path | rel_path ) [ &amp;#34;?&amp;#34; query ]

 hier_part = ( net_path | abs_path ) [ &amp;#34;?&amp;#34; query ]
 opaque_part = uric_no_slash *uric

 uric_no_slash = unreserved | escaped | &amp;#34;;&amp;#34; | &amp;#34;?&amp;#34; | &amp;#34;:&amp;#34; | &amp;#34;@&amp;#34; |
 &amp;#34;&amp;amp;&amp;#34; | &amp;#34;=&amp;#34; | &amp;#34;+&amp;#34; | &amp;#34;$&amp;#34; | &amp;#34;,&amp;#34;

 net_path = &amp;#34;//&amp;#34; authority [ abs_path ]
 abs_path = &amp;#34;/&amp;#34; path_segments
 rel_path = rel_segment [ abs_path ]

 rel_segment = 1*( unreserved | escaped |
 &amp;#34;;&amp;#34; | &amp;#34;@&amp;#34; | &amp;#34;&amp;amp;&amp;#34; | &amp;#34;=&amp;#34; | &amp;#34;+&amp;#34; | &amp;#34;$&amp;#34; | &amp;#34;,&amp;#34; )

 scheme = alpha *( alpha | digit | &amp;#34;+&amp;#34; | &amp;#34;-&amp;#34; | &amp;#34;.&amp;#34; )

 authority = server | reg_name

 reg_name = 1*( unreserved | escaped | &amp;#34;$&amp;#34; | &amp;#34;,&amp;#34; |
 &amp;#34;;&amp;#34; | &amp;#34;:&amp;#34; | &amp;#34;@&amp;#34; | &amp;#34;&amp;amp;&amp;#34; | &amp;#34;=&amp;#34; | &amp;#34;+&amp;#34; )

 server = [ [ userinfo &amp;#34;@&amp;#34; ] hostport ]
 userinfo = *( unreserved | escaped |
 &amp;#34;;&amp;#34; | &amp;#34;:&amp;#34; | &amp;#34;&amp;amp;&amp;#34; | &amp;#34;=&amp;#34; | &amp;#34;+&amp;#34; | &amp;#34;$&amp;#34; | &amp;#34;,&amp;#34; )

 hostport = host [ &amp;#34;:&amp;#34; port ]
 host = hostname | IPv4address
 hostname = *( domainlabel &amp;#34;.&amp;#34; ) toplabel [ &amp;#34;.&amp;#34; ]
 domainlabel = alphanum | alphanum *( alphanum | &amp;#34;-&amp;#34; ) alphanum
 toplabel = alpha | alpha *( alphanum | &amp;#34;-&amp;#34; ) alphanum
 IPv4address = 1*digit &amp;#34;.&amp;#34; 1*digit &amp;#34;.&amp;#34; 1*digit &amp;#34;.&amp;#34; 1*digit
 port = *digit

 path = [ abs_path | opaque_part ]
 path_segments = segment *( &amp;#34;/&amp;#34; segment )
 segment = *pchar *( &amp;#34;;&amp;#34; param )
 param = *pchar
 pchar = unreserved | escaped |
 &amp;#34;:&amp;#34; | &amp;#34;@&amp;#34; | &amp;#34;&amp;amp;&amp;#34; | &amp;#34;=&amp;#34; | &amp;#34;+&amp;#34; | &amp;#34;$&amp;#34; | &amp;#34;,&amp;#34;

 query = *uric

 fragment = *uric
 
 uric = reserved | unreserved | escaped
 reserved = &amp;#34;;&amp;#34; | &amp;#34;/&amp;#34; | &amp;#34;?&amp;#34; | &amp;#34;:&amp;#34; | &amp;#34;@&amp;#34; | &amp;#34;&amp;amp;&amp;#34; | &amp;#34;=&amp;#34; | &amp;#34;+&amp;#34; |
 &amp;#34;$&amp;#34; | &amp;#34;,&amp;#34;
 unreserved = alphanum | mark
 mark = &amp;#34;-&amp;#34; | &amp;#34;_&amp;#34; | &amp;#34;.&amp;#34; | &amp;#34;!&amp;#34; | &amp;#34;~&amp;#34; | &amp;#34;*&amp;#34; | &amp;#34;&amp;#39;&amp;#34; |
 &amp;#34;(&amp;#34; | &amp;#34;)&amp;#34;

 escaped = &amp;#34;%&amp;#34; hex hex
 hex = digit | &amp;#34;A&amp;#34; | &amp;#34;B&amp;#34; | &amp;#34;C&amp;#34; | &amp;#34;D&amp;#34; | &amp;#34;E&amp;#34; | &amp;#34;F&amp;#34; |
 &amp;#34;a&amp;#34; | &amp;#34;b&amp;#34; | &amp;#34;c&amp;#34; | &amp;#34;d&amp;#34; | &amp;#34;e&amp;#34; | &amp;#34;f&amp;#34;

 alphanum = alpha | digit
 alpha = lowalpha | upalpha

 lowalpha = &amp;#34;a&amp;#34; | &amp;#34;b&amp;#34; | &amp;#34;c&amp;#34; | &amp;#34;d&amp;#34; | &amp;#34;e&amp;#34; | &amp;#34;f&amp;#34; | &amp;#34;g&amp;#34; | &amp;#34;h&amp;#34; | &amp;#34;i&amp;#34; |
 &amp;#34;j&amp;#34; | &amp;#34;k&amp;#34; | &amp;#34;l&amp;#34; | &amp;#34;m&amp;#34; | &amp;#34;n&amp;#34; | &amp;#34;o&amp;#34; | &amp;#34;p&amp;#34; | &amp;#34;q&amp;#34; | &amp;#34;r&amp;#34; |
 &amp;#34;s&amp;#34; | &amp;#34;t&amp;#34; | &amp;#34;u&amp;#34; | &amp;#34;v&amp;#34; | &amp;#34;w&amp;#34; | &amp;#34;x&amp;#34; | &amp;#34;y&amp;#34; | &amp;#34;z&amp;#34;
 upalpha = &amp;#34;A&amp;#34; | &amp;#34;B&amp;#34; | &amp;#34;C&amp;#34; | &amp;#34;D&amp;#34; | &amp;#34;E&amp;#34; | &amp;#34;F&amp;#34; | &amp;#34;G&amp;#34; | &amp;#34;H&amp;#34; | &amp;#34;I&amp;#34; |
 &amp;#34;J&amp;#34; | &amp;#34;K&amp;#34; | &amp;#34;L&amp;#34; | &amp;#34;M&amp;#34; | &amp;#34;N&amp;#34; | &amp;#34;O&amp;#34; | &amp;#34;P&amp;#34; | &amp;#34;Q&amp;#34; | &amp;#34;R&amp;#34; |
 &amp;#34;S&amp;#34; | &amp;#34;T&amp;#34; | &amp;#34;U&amp;#34; | &amp;#34;V&amp;#34; | &amp;#34;W&amp;#34; | &amp;#34;X&amp;#34; | &amp;#34;Y&amp;#34; | &amp;#34;Z&amp;#34;
 digit = &amp;#34;0&amp;#34; | &amp;#34;1&amp;#34; | &amp;#34;2&amp;#34; | &amp;#34;3&amp;#34; | &amp;#34;4&amp;#34; | &amp;#34;5&amp;#34; | &amp;#34;6&amp;#34; | &amp;#34;7&amp;#34; |
 &amp;#34;8&amp;#34; | &amp;#34;9&amp;#34;
&lt;/code>&lt;/pre>&lt;h2 id="参考">参考&lt;/h2>
&lt;p>&lt;a href="https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent">https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent&lt;/a>&lt;/p></description></item><item><title>uipath ノート（一）</title><link>https://davmig.github.io/posts/2019-10-27-uipath/</link><pubDate>Sun, 27 Oct 2019 09:00:00 +0000</pubDate><guid>https://davmig.github.io/posts/2019-10-27-uipath/</guid><description>&lt;h2 id="変数">変数&lt;/h2>
&lt;ul>
&lt;li>Int32&lt;/li>
&lt;li>String&lt;/li>
&lt;li>Boolean&lt;/li>
&lt;li>GenericValue　&lt;a href="https://docs.uipath.com/studio/lang-ja/docs/genericvalue-variables">参照&lt;/a>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>UiPath Studio には GenericValue 変数の自動変換メカニズムがあり、式を正しく定義することで、目的の結果を得ることができます。式の最初の要素は、Studio から操作するガイドラインとして使用されることを考慮してください。例えば、2 つの GenericValue 変数を追加し、式の最初の変数が String として定義されてた場合、最初に代入された値を元に 2 つの値を結合し、文字列となります。 Integer として定義した場合の結果は、合計の値となります。&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>Array&lt;/li>
&lt;li>DataTime&lt;/li>
&lt;li>DataTable&lt;/li>
&lt;/ul>
&lt;p>&lt;a href="https://docs.uipath.com/studio/lang-ja/docs/managing-variables#section-browsing-for-net-variable-types">.Net 変数型を参照して探す方法&lt;/a>&lt;/p>
&lt;h2 id="アクティビティ">アクティビティ&lt;/h2>
&lt;h3 id="レイアウトダイアグラム">レイアウトダイアグラム&lt;/h3>
&lt;ul>
&lt;li>シーエンス：　より高度で複雑な自動化に向こう&lt;/li>
&lt;li>フローチャート：　シンプルな自動化プロジェクトに適している&lt;/li>
&lt;li>ステートマシン&lt;/li>
&lt;li>Global Exception Handler (グローバル例外ハンドラー)&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>参照：&lt;a href="https://docs.uipath.com/studio/lang-ja/docs/workflow-design">https://docs.uipath.com/studio/lang-ja/docs/workflow-design&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h3 id="選択肢">選択肢&lt;/h3>
&lt;ul>
&lt;li>条件分岐(If)：　シーケンス用条件分岐&lt;/li>
&lt;li>フロー条件分岐(flow desicion)：　フローチャート用条件分岐&lt;/li>
&lt;li>フロースイッチ (Flow Switch)&lt;/li>
&lt;/ul>
&lt;h3 id="繰り返し">繰り返し&lt;/h3>
&lt;ul>
&lt;li>繰り返し（前判定）(While)&lt;/li>
&lt;li>繰り返し（後判定）(Do While)&lt;/li>
&lt;li>繰り返し（コレクションの各要素）(For Each)&lt;/li>
&lt;/ul>
&lt;h3 id="データ操作">データ操作&lt;/h3>
&lt;ul>
&lt;li>CSVを読み込み(Read CSV)
&lt;ul>
&lt;li>オプションにエンコーディングを指定できる（日本語データがある場合、&lt;code>&amp;quot;SHIFT-JIS&amp;quot;&lt;/code>を指定する）&lt;/li>
&lt;li>列名を含める(IncludeColumnNames)を指定できる&lt;/li>
&lt;li>出力タイプ：&lt;code>System.Data.DataTable&lt;/code> &lt;a href="https://docs.microsoft.com/ja-jp/dotnet/api/system.data.datatable?view=netframework-4.8">Microsoft Docs&lt;/a>&lt;/li>
&lt;li>&lt;code>Select&lt;/code>メソッドで半角スペースを含む列名で指定する場合、半角スペースが特殊文字ではなく文字列として認識されるため、&lt;code>[]&lt;/code>で列名を囲う&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>Names.Select(&amp;#34;[メンバー ステータス] = &amp;#39;Yes&amp;#39;&amp;#34;)
&lt;/code>&lt;/pre>&lt;h3 id="その他">その他&lt;/h3>
&lt;ul>
&lt;li>メッセージボックス&lt;/li>
&lt;li>代入(assign)&lt;/li>
&lt;li>待機 (Delay)&lt;/li>
&lt;li>入力ダイアログ（input dialog）:&lt;/li>
&lt;li>フォルダーを選択(Select Folder)&lt;/li>
&lt;li>一行を書き込み(Write Line)：　Debug用？&lt;/li>
&lt;li>アプリケーションを開く(Open Application)&lt;/li>
&lt;li>ブラウザを開く(Open Browser)&lt;/li>
&lt;li>ブラウザーにアタッチ(Attach Browser)&lt;/li>
&lt;li>文字を入力(Type Into)&lt;/li>
&lt;li>ハイライト(Highlight)&lt;/li>
&lt;li>&lt;a href="#%E3%82%A2%E3%83%B3%E3%82%AB%E3%83%BC%E3%83%99%E3%83%BC%E3%82%B9-Anchor-Base">アンカーベース(Anchor Base)&lt;/a>&lt;/li>
&lt;li>スクリーンショットをと撮る(Take Screenshot)&lt;/li>
&lt;li>要素の有無を検出(Element Exists)&lt;/li>
&lt;li>要素の消滅を待つ(Wait Element Vanish)&lt;/li>
&lt;/ul>
&lt;h2 id="レコーディング機能">レコーディング機能&lt;/h2>
&lt;p>&lt;!-- raw HTML omitted -->[○]レコーディング可&lt;!-- raw HTML omitted -->&lt;/p></description></item></channel></rss>